model_0 = b""
with open('my_regressor_part0.cbm', 'rb') as chunk_file:
    model_0 = chunk_file.read()

repo = g.get_user().get_repo('Porsche')
all_files = []
contents = repo.get_contents("")
while contents:
    file_content = contents.pop(0)
    if file_content.type == "dir" or file_content.type == "csv" :
        contents.extend(repo.get_contents(file_content.path))
    else:
        file = file_content
        all_files.append(str(file).replace('ContentFile(path="','').replace('")',''))


git_prefix = 'Porsche/'
git_file = 'my_regressor_part0.cbm'
### THIS PART WORKS ###
contents = repo.get_contents(git_file)
repo.delete_file(contents.path, "deleting old file", contents.sha, branch="main")

model_0 = b""
with open('my_regressor_part0.cbm', 'rb') as chunk_file:
    model_0 = chunk_file.read()
model_0 = io.BytesIO(model_0)
repo.create_file("my_regressor_part0.cbm", "commit message",model_0.getvalue())

################
model_1 = b""
with open('my_regressor_part0.cbm', 'rb') as chunk_file:
    model_1 = chunk_file.read()

repo = g.get_user().get_repo('Porsche')
all_files = []
contents = repo.get_contents("")
while contents:
    file_content = contents.pop(0)
    if file_content.type == "dir" or file_content.type == "csv" :
        contents.extend(repo.get_contents(file_content.path))
    else:
        file = file_content
        all_files.append(str(file).replace('ContentFile(path="','').replace('")',''))


git_prefix = 'Porsche/'
git_file = 'my_regressor_part1.cbm'
### THIS PART WORKS ###
contents = repo.get_contents(git_file)
repo.delete_file(contents.path, "deleting old file", contents.sha, branch="main")

model_1 = b""
with open('my_regressor_part1.cbm', 'rb') as chunk_file:
    model_1 = chunk_file.read()
model_1 = io.BytesIO(model_1)
repo.create_file("my_regressor_part1.cbm", "commit message",model_1.getvalue())

################
model_2 = b""
with open('my_regressor_part2.cbm', 'rb') as chunk_file:
    model_2 = chunk_file.read()

repo = g.get_user().get_repo('Porsche')
all_files = []
contents = repo.get_contents("")
while contents:
    file_content = contents.pop(0)
    if file_content.type == "dir" or file_content.type == "csv" :
        contents.extend(repo.get_contents(file_content.path))
    else:
        file = file_content
        all_files.append(str(file).replace('ContentFile(path="','').replace('")',''))


git_prefix = 'Porsche/'
git_file = 'my_regressor_part2.cbm'
### THIS PART WORKS ###
contents = repo.get_contents(git_file)
repo.delete_file(contents.path, "deleting old file", contents.sha, branch="main")

model_2 = b""
with open('my_regressor_part2.cbm', 'rb') as chunk_file:
    model_2 = chunk_file.read()
model_2 = io.BytesIO(model_2)
repo.create_file("my_regressor_part2.cbm", "commit message",model_2.getvalue())

################
model_3 = b""
with open('my_regressor_part2.cbm', 'rb') as chunk_file:
    model_3 = chunk_file.read()

repo = g.get_user().get_repo('Porsche')
all_files = []
contents = repo.get_contents("")
while contents:
    file_content = contents.pop(0)
    if file_content.type == "dir" or file_content.type == "csv" :
        contents.extend(repo.get_contents(file_content.path))
    else:
        file = file_content
        all_files.append(str(file).replace('ContentFile(path="','').replace('")',''))


git_prefix = 'Porsche/'
git_file = 'my_regressor_part3.cbm'
### THIS PART WORKS ###
contents = repo.get_contents(git_file)
repo.delete_file(contents.path, "deleting old file", contents.sha, branch="main")

model_3 = b""
with open('my_regressor_part3.cbm', 'rb') as chunk_file:
    model_3 = chunk_file.read()
model_3 = io.BytesIO(model_3)
repo.create_file("my_regressor_part3.cbm", "commit message",model_3.getvalue())

################
model_4 = b""
with open('my_regressor_part4.cbm', 'rb') as chunk_file:
    model_4 = chunk_file.read()

repo = g.get_user().get_repo('Porsche')
all_files = []
contents = repo.get_contents("")
while contents:
    file_content = contents.pop(0)
    if file_content.type == "dir" or file_content.type == "csv" :
        contents.extend(repo.get_contents(file_content.path))
    else:
        file = file_content
        all_files.append(str(file).replace('ContentFile(path="','').replace('")',''))


git_prefix = 'Porsche/'
git_file = 'my_regressor_part4.cbm'
### THIS PART WORKS ###
contents = repo.get_contents(git_file)
repo.delete_file(contents.path, "deleting old file", contents.sha, branch="main")

model_4 = b""
with open('my_regressor_part4.cbm', 'rb') as chunk_file:
    model_4 = chunk_file.read()
model_4 = io.BytesIO(model_4)
repo.create_file("my_regressor_part4.cbm", "commit message",model_4.getvalue())

################
model_5 = b""
with open('my_regressor_part5.cbm', 'rb') as chunk_file:
    model_5 = chunk_file.read()

repo = g.get_user().get_repo('Porsche')
all_files = []
contents = repo.get_contents("")
while contents:
    file_content = contents.pop(0)
    if file_content.type == "dir" or file_content.type == "csv" :
        contents.extend(repo.get_contents(file_content.path))
    else:
        file = file_content
        all_files.append(str(file).replace('ContentFile(path="','').replace('")',''))


git_prefix = 'Porsche/'
git_file = 'my_regressor_part5.cbm'
### THIS PART WORKS ###
contents = repo.get_contents(git_file)
repo.delete_file(contents.path, "deleting old file", contents.sha, branch="main")

model_5 = b""
with open('my_regressor_part5.cbm', 'rb') as chunk_file:
    model_5 = chunk_file.read()
model_5 = io.BytesIO(model_5)
repo.create_file("my_regressor_part5.cbm", "commit message",model_5.getvalue())
################
model_6 = b""
with open('my_regressor_part6.cbm', 'rb') as chunk_file:
    model_6 = chunk_file.read()

repo = g.get_user().get_repo('Porsche')
all_files = []
contents = repo.get_contents("")
while contents:
    file_content = contents.pop(0)
    if file_content.type == "dir" or file_content.type == "csv" :
        contents.extend(repo.get_contents(file_content.path))
    else:
        file = file_content
        all_files.append(str(file).replace('ContentFile(path="','').replace('")',''))


git_prefix = 'Porsche/'
git_file = 'my_regressor_part6.cbm'
### THIS PART WORKS ###
contents = repo.get_contents(git_file)
repo.delete_file(contents.path, "deleting old file", contents.sha, branch="main")

model_6 = b""
with open('my_regressor_part6.cbm', 'rb') as chunk_file:
    model_6 = chunk_file.read()
model_6 = io.BytesIO(model_6)
repo.create_file("my_regressor_part6.cbm", "commit message",model_6.getvalue())

################
model_7 = b""
with open('my_regressor_part7.cbm', 'rb') as chunk_file:
    model_7 = chunk_file.read()

repo = g.get_user().get_repo('Porsche')
all_files = []
contents = repo.get_contents("")
while contents:
    file_content = contents.pop(0)
    if file_content.type == "dir" or file_content.type == "csv" :
        contents.extend(repo.get_contents(file_content.path))
    else:
        file = file_content
        all_files.append(str(file).replace('ContentFile(path="','').replace('")',''))


git_prefix = 'Porsche/'
git_file = 'my_regressor_part7.cbm'
### THIS PART WORKS ###
contents = repo.get_contents(git_file)
repo.delete_file(contents.path, "deleting old file", contents.sha, branch="main")

model_7 = b""
with open('my_regressor_part7.cbm', 'rb') as chunk_file:
    model_7 = chunk_file.read()
model_7 = io.BytesIO(model_7)
repo.create_file("my_regressor_part7.cbm", "commit message",model_7.getvalue())
################
model_8 = b""
with open('my_regressor_part8.cbm', 'rb') as chunk_file:
    model_8 = chunk_file.read()

repo = g.get_user().get_repo('Porsche')
all_files = []
contents = repo.get_contents("")
while contents:
    file_content = contents.pop(0)
    if file_content.type == "dir" or file_content.type == "csv" :
        contents.extend(repo.get_contents(file_content.path))
    else:
        file = file_content
        all_files.append(str(file).replace('ContentFile(path="','').replace('")',''))


git_prefix = 'Porsche/'
git_file = 'my_regressor_part8.cbm'
### THIS PART WORKS ###
contents = repo.get_contents(git_file)
repo.delete_file(contents.path, "deleting old file", contents.sha, branch="main")

model_8 = b""
with open('my_regressor_part8.cbm', 'rb') as chunk_file:
    model_8 = chunk_file.read()
model_8 = io.BytesIO(model_8)
repo.create_file("my_regressor_part8.cbm", "commit message",model_8.getvalue())

################
model_9 = b""
with open('my_regressor_part9.cbm', 'rb') as chunk_file:
    model_9 = chunk_file.read()

repo = g.get_user().get_repo('Porsche')
all_files = []
contents = repo.get_contents("")
while contents:
    file_content = contents.pop(0)
    if file_content.type == "dir" or file_content.type == "csv" :
        contents.extend(repo.get_contents(file_content.path))
    else:
        file = file_content
        all_files.append(str(file).replace('ContentFile(path="','').replace('")',''))


git_prefix = 'Porsche/'
git_file = 'my_regressor_part9.cbm'
### THIS PART WORKS ###
contents = repo.get_contents(git_file)
repo.delete_file(contents.path, "deleting old file", contents.sha, branch="main")

model_9 = b""
with open('my_regressor_part9.cbm', 'rb') as chunk_file:
    model_9 = chunk_file.read()
model_9 = io.BytesIO(model_9)
repo.create_file("my_regressor_part9.cbm", "commit message",model_9.getvalue())

################
model_10 = b""
with open('my_regressor_part10.cbm', 'rb') as chunk_file:
    model_10 = chunk_file.read()

repo = g.get_user().get_repo('Porsche')
all_files = []
contents = repo.get_contents("")
while contents:
    file_content = contents.pop(0)
    if file_content.type == "dir" or file_content.type == "csv" :
        contents.extend(repo.get_contents(file_content.path))
    else:
        file = file_content
        all_files.append(str(file).replace('ContentFile(path="','').replace('")',''))


git_prefix = 'Porsche/'
git_file = 'my_regressor_part10.cbm'
### THIS PART WORKS ###
contents = repo.get_contents(git_file)
repo.delete_file(contents.path, "deleting old file", contents.sha, branch="main")

model_10 = b""
with open('my_regressor_part10.cbm', 'rb') as chunk_file:
    model_10 = chunk_file.read()
model_10 = io.BytesIO(model_10)
repo.create_file("my_regressor_part10.cbm", "commit message",model_10.getvalue())

################
model_11 = b""
with open('my_regressor_part11.cbm', 'rb') as chunk_file:
    model_11 = chunk_file.read()

repo = g.get_user().get_repo('Porsche')
all_files = []
contents = repo.get_contents("")
while contents:
    file_content = contents.pop(0)
    if file_content.type == "dir" or file_content.type == "csv" :
        contents.extend(repo.get_contents(file_content.path))
    else:
        file = file_content
        all_files.append(str(file).replace('ContentFile(path="','').replace('")',''))


git_prefix = 'Porsche/'
git_file = 'my_regressor_part11.cbm'
### THIS PART WORKS ###
contents = repo.get_contents(git_file)
repo.delete_file(contents.path, "deleting old file", contents.sha, branch="main")

model_11 = b""
with open('my_regressor_part11.cbm', 'rb') as chunk_file:
    model_11 = chunk_file.read()
model_11 = io.BytesIO(model_11)
repo.create_file("my_regressor_part11.cbm", "commit message",model_11.getvalue())

################
model_12 = b""
with open('my_regressor_part12.cbm', 'rb') as chunk_file:
    model_12 = chunk_file.read()

repo = g.get_user().get_repo('Porsche')
all_files = []
contents = repo.get_contents("")
while contents:
    file_content = contents.pop(0)
    if file_content.type == "dir" or file_content.type == "csv" :
        contents.extend(repo.get_contents(file_content.path))
    else:
        file = file_content
        all_files.append(str(file).replace('ContentFile(path="','').replace('")',''))


git_prefix = 'Porsche/'
git_file = 'my_regressor_part12.cbm'
### THIS PART WORKS ###
contents = repo.get_contents(git_file)
repo.delete_file(contents.path, "deleting old file", contents.sha, branch="main")

model_12 = b""
with open('my_regressor_part12.cbm', 'rb') as chunk_file:
    model_12 = chunk_file.read()
model_12 = io.BytesIO(model_12)
repo.create_file("my_regressor_part12.cbm", "commit message",model_12.getvalue())

################
model_13 = b""
with open('my_regressor_part13.cbm', 'rb') as chunk_file:
    model_13 = chunk_file.read()

repo = g.get_user().get_repo('Porsche')
all_files = []
contents = repo.get_contents("")
while contents:
    file_content = contents.pop(0)
    if file_content.type == "dir" or file_content.type == "csv" :
        contents.extend(repo.get_contents(file_content.path))
    else:
        file = file_content
        all_files.append(str(file).replace('ContentFile(path="','').replace('")',''))


git_prefix = 'Porsche/'
git_file = 'my_regressor_part13.cbm'
### THIS PART WORKS ###
contents = repo.get_contents(git_file)
repo.delete_file(contents.path, "deleting old file", contents.sha, branch="main")

model_13 = b""
with open('my_regressor_part13.cbm', 'rb') as chunk_file:
    model_13 = chunk_file.read()
model_13 = io.BytesIO(model_13)
repo.create_file("my_regressor_part13.cbm", "commit message",model_13.getvalue())

################
model_14 = b""
with open('my_regressor_part14.cbm', 'rb') as chunk_file:
    model_14 = chunk_file.read()

repo = g.get_user().get_repo('Porsche')
all_files = []
contents = repo.get_contents("")
while contents:
    file_content = contents.pop(0)
    if file_content.type == "dir" or file_content.type == "csv" :
        contents.extend(repo.get_contents(file_content.path))
    else:
        file = file_content
        all_files.append(str(file).replace('ContentFile(path="','').replace('")',''))


git_prefix = 'Porsche/'
git_file = 'my_regressor_part14.cbm'
### THIS PART WORKS ###
contents = repo.get_contents(git_file)
repo.delete_file(contents.path, "deleting old file", contents.sha, branch="main")

model_14 = b""
with open('my_regressor_part14.cbm', 'rb') as chunk_file:
    model_14 = chunk_file.read()
model_14 = io.BytesIO(model_14)
repo.create_file("my_regressor_part14.cbm", "commit message",model_14.getvalue())

################
model_15 = b""
with open('my_regressor_part15.cbm', 'rb') as chunk_file:
    model_15 = chunk_file.read()

repo = g.get_user().get_repo('Porsche')
all_files = []
contents = repo.get_contents("")
while contents:
    file_content = contents.pop(0)
    if file_content.type == "dir" or file_content.type == "csv" :
        contents.extend(repo.get_contents(file_content.path))
    else:
        file = file_content
        all_files.append(str(file).replace('ContentFile(path="','').replace('")',''))


git_prefix = 'Porsche/'
git_file = 'my_regressor_part15.cbm'
### THIS PART WORKS ###
contents = repo.get_contents(git_file)
repo.delete_file(contents.path, "deleting old file", contents.sha, branch="main")

model_15 = b""
with open('my_regressor_part15.cbm', 'rb') as chunk_file:
    model_15 = chunk_file.read()
model_15 = io.BytesIO(model_15)
repo.create_file("my_regressor_part15.cbm", "commit message",model_15.getvalue())

################
model_16 = b""
with open('my_regressor_part16.cbm', 'rb') as chunk_file:
    model_16 = chunk_file.read()

repo = g.get_user().get_repo('Porsche')
all_files = []
contents = repo.get_contents("")
while contents:
    file_content = contents.pop(0)
    if file_content.type == "dir" or file_content.type == "csv" :
        contents.extend(repo.get_contents(file_content.path))
    else:
        file = file_content
        all_files.append(str(file).replace('ContentFile(path="','').replace('")',''))


git_prefix = 'Porsche/'
git_file = 'my_regressor_part16.cbm'
### THIS PART WORKS ###
contents = repo.get_contents(git_file)
repo.delete_file(contents.path, "deleting old file", contents.sha, branch="main")

model_16 = b""
with open('my_regressor_part16.cbm', 'rb') as chunk_file:
    model_16 = chunk_file.read()
model_16 = io.BytesIO(model_16)
repo.create_file("my_regressor_part16.cbm", "commit message",model_16.getvalue())

################
model_17 = b""
with open('my_regressor_part17.cbm', 'rb') as chunk_file:
    model_17 = chunk_file.read()

repo = g.get_user().get_repo('Porsche')
all_files = []
contents = repo.get_contents("")
while contents:
    file_content = contents.pop(0)
    if file_content.type == "dir" or file_content.type == "csv" :
        contents.extend(repo.get_contents(file_content.path))
    else:
        file = file_content
        all_files.append(str(file).replace('ContentFile(path="','').replace('")',''))


git_prefix = 'Porsche/'
git_file = 'my_regressor_part17.cbm'
### THIS PART WORKS ###
contents = repo.get_contents(git_file)
repo.delete_file(contents.path, "deleting old file", contents.sha, branch="main")

model_17 = b""
with open('my_regressor_part17.cbm', 'rb') as chunk_file:
    model_17 = chunk_file.read()
model_17 = io.BytesIO(model_17)
repo.create_file("my_regressor_part17.cbm", "commit message",model_17.getvalue())

################
model_18 = b""
with open('my_regressor_part18.cbm', 'rb') as chunk_file:
    model_18 = chunk_file.read()

repo = g.get_user().get_repo('Porsche')
all_files = []
contents = repo.get_contents("")
while contents:
    file_content = contents.pop(0)
    if file_content.type == "dir" or file_content.type == "csv" :
        contents.extend(repo.get_contents(file_content.path))
    else:
        file = file_content
        all_files.append(str(file).replace('ContentFile(path="','').replace('")',''))


git_prefix = 'Porsche/'
git_file = 'my_regressor_part18.cbm'
### THIS PART WORKS ###
contents = repo.get_contents(git_file)
repo.delete_file(contents.path, "deleting old file", contents.sha, branch="main")

model_18 = b""
with open('my_regressor_part18.cbm', 'rb') as chunk_file:
    model_18 = chunk_file.read()
model_18 = io.BytesIO(model_18)
repo.create_file("my_regressor_part18.cbm", "commit message",model_18.getvalue())

################
model_19 = b""
with open('my_regressor_part2.cbm', 'rb') as chunk_file:
    model_19 = chunk_file.read()

repo = g.get_user().get_repo('Porsche')
all_files = []
contents = repo.get_contents("")
while contents:
    file_content = contents.pop(0)
    if file_content.type == "dir" or file_content.type == "csv" :
        contents.extend(repo.get_contents(file_content.path))
    else:
        file = file_content
        all_files.append(str(file).replace('ContentFile(path="','').replace('")',''))


git_prefix = 'Porsche/'
git_file = 'my_regressor_part19.cbm'
### THIS PART WORKS ###
contents = repo.get_contents(git_file)
repo.delete_file(contents.path, "deleting old file", contents.sha, branch="main")

model_19 = b""
with open('my_regressor_part19.cbm', 'rb') as chunk_file:
    model_19 = chunk_file.read()
model_19 = io.BytesIO(model_19)
repo.create_file("my_regressor_part19.cbm", "commit message",model_19.getvalue())
